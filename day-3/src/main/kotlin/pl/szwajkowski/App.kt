/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package pl.szwajkowski

import java.io.File
import java.util.regex.Pattern

fun read() = File("input.txt").readLines(Charsets.UTF_8)

fun main(args: Array<String>) {
    val lines = read()

    val array = MutableList<MutableList<IdValue?>>(1100) { MutableList(1100) { null } }

    lines.map { l -> parseLine(l) }.forEach {
        mark(it, array)
    }
    var acc = 0
    for (i in 0 until array.size) {
        for (j in 0 until array[i].size) {
            if (array[i][j] != null && array[i][j]!!.value > 1) {
                acc++
            }
        }
    }

    println(acc)
    for (i in 1 until 1382) {
        if (!a.contains(i)) {
            print(i)
        }
    }
}

val a = HashSet<Int>()

fun mark(line: Line, array: MutableList<MutableList<IdValue?>>) {
    for (i in line.left until line.left + line.width) {
        for (j in line.top until line.top + line.length) {
            if (array[i][j] == null) {
                array[i][j] = IdValue(line.id, 1)
            } else {
                a.add(line.id)
                a.add(array[i][j]!!.id)
                array[i][j]!!.value += 1

            }
        }
    }
}

fun parseLine(line: String): Line {
    //#1 @ 493,113: 12x14

    val matcher = Pattern.compile("^#(\\d+)\\ @\\ (\\d+),(\\d+):\\ (\\d+)x(\\d+)\$").matcher(line)
    if (matcher.find()) {
        return Line(matcher.group(1).toInt(), matcher.group(2).toInt(), matcher.group(3).toInt(), matcher.group(4).toInt(),
                matcher.group(5).toInt())
    }
    throw RuntimeException("Failed to parse $line")

}

data class Line(val id: Int, val left: Int, val top: Int, val width: Int, val length: Int)
data class IdValue(val id: Int, var value: Int)